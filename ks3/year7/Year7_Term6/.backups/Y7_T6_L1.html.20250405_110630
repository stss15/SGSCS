<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Yr 7 Data Rep - L1: Why Binary?</title>
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Cinzel:wght@400;700&family=Press+Start+2P&family=Open+Sans&display=swap" rel="stylesheet">

    <link rel="stylesheet" href="../../../styles/main.css">
    
    <link rel="stylesheet" href="../../../styles/ks3_theme.css">
    
    
    
    
</head>
<body>
    <!-- HEADER: This will be dynamically loaded via includes/header.html -->
    <header class="main-header nav-sticky">
        <nav class="main-nav">
            <div class="logo">
                <a href="../../../index.html">Home</a>
            </div>
            <ul>
                <li><a href="../../../ks3/year7/Landing_Page/Year7_Landing.html">Year 7</a></li>
                <li><a href="#">Year 8</a></li>
                <li><a href="#">Year 9</a></li>
                <li><a href="../../../ks3/index.html">KS3</a></li>
                <li><a href="../../../ks4/index.html">KS4</a></li>
                <li><a href="../../../ks5/index.html">KS5</a></li>
            </ul>
            <button class="menu-toggle" aria-label="Toggle navigation" aria-expanded="false">
                <span class="hamburger-icon"></span>
            </button>
        </nav>
    </header>

    <main>
        <!-- CONTENT: Your content goes here -->
        <!-- 
        EXAMPLE CONTENT STRUCTURE:
        
        <div class="article-container">
            <div class="page-title">
                <h1>Your Page Title</h1>
            </div>
            
            <section class="content-section">
                <h2>Section Heading</h2>
                <p>Your content goes here...</p>
            </section>
        </div>
        -->
        <!-- Combined Intro Section -->
    <section class="lesson-intro-container card"> <!-- Keep card for overall border/padding -->

      <div class="zelda-hero-banner">
        <h1>Lesson 1: Why Binary?</h1>
        <p>The Computer's Secret Code!</p>
      </div>

      <div class="goals-content">
          <div class="goal-card">
            <div class="lesson-objectives-static">
              <h2>Objectives</h2>
              <ul>
                <li>Explain why computers use the binary system.</li>
                <li>Define the terms: Binary, Denary, Bit.</li>
                <li>Relate binary digits (0 and 1) to ON/OFF states.</li>
              </ul>
            </div>
          </div>
          <div class="goal-card">
            <div class="lesson-concepts-static">
              <h2>Concepts Covered</h2>
              <ul>
                <li data-concept="form">Form (How data is represented)</li>
                <li data-concept="logic">Logic (Simple decision making)</li>
                <li data-concept="data">Data (The smallest unit: bit)</li>
              </ul>
            </div>
          </div>
        </div>
    </section>
    <!-- End Combined Intro Section -->

    <article class="card">
      <p class="intro-paragraph">
        Welcome, young adventurers! Have you ever wondered how computers understand everything we tell them to do? Whether it's playing a game, showing a video, or just displaying text? It's not magic ‚Äì it's Computer Science! Deep down, computers use a very simple system based on just two digits: <strong>0</strong> and <strong>1</strong>. This system is called <strong>binary</strong>, and it's the fundamental language of all digital devices. Let's explore why!
      </p>

      <div class="fancy-divider"></div>

      <div class="activity-grid">
        <section class="activity-section learn-it">
          <h3 class="activity-title">
            <span class="activity-icon">üìñ</span> Learn It: The Secret Code Revealed!
          </h3>
          <div class="activity-content">
            <p>First things first, how do *we* count? We use ten digits (0-9). Think about your ten fingers ‚Äì perfect for this! It's called the <strong>Denary</strong> (or <strong>Base-10</strong>) system. 'Base' just means how many digits you use.</p>
            <p>Now, picture a computer. It's full of tiny electronic switches, millions of them! Like a light switch, each tiny switch can only be in two states: <strong>ON</strong> or <strong>OFF</strong>. There's no 'half-on'!</p>
            
            <!-- Visual Suggestion Placeholder -->
            <div class="visual-placeholder" style="border: 1px dashed var(--medium-gray); padding: 15px; text-align: center; margin: 15px 0; background: var(--light-gray); color: var(--dark-gray);">
              [Visual Suggestion: Simple graphic showing OFF (0) and ON (1) light switches]
            </div>
            <!-- End Placeholder -->

            <p>Because of this, computers use a system with only two digits: <strong>0</strong> (for OFF) and <strong>1</strong> (for ON). This is called <strong>Binary</strong> (or <strong>Base-2</strong>).</p>
            <p>Why only two? It's much easier and more reliable for electronics to handle just two clear states (ON/OFF) than ten different levels of electricity. This simple <strong>Form</strong> is key!</p>
            <p>Each single 0 or 1 is called a <strong>bit</strong>. It's the smallest possible piece of <strong>Data</strong> a computer can understand. Think of it as one switch.</p>
            <h4>Key Quest Items (Keywords):</h4>
            <ul>
              <li><strong>Binary:</strong> Base-2 system (0, 1). Computer language!</li>
              <li><strong>Denary:</strong> Base-10 system (0-9). Our everyday numbers.</li>
              <li><strong>Base:</strong> How many digits a number system uses.</li>
              <li><strong>Bit:</strong> One binary digit (a single 0 or 1).</li>
              <li><strong>ON/OFF:</strong> The two states representing 1 and 0.</li>
            </ul>
          </div>
        </section>

        <section class="activity-section analyse-it">
          <h3 class="activity-title">
            <span class="activity-icon">ü§î</span> Analyse It: Switch Combinations
          </h3>
          <div class="activity-content">
            <p>Let's use some <strong>Logic</strong>! If one switch (1 bit) can be ON (1) or OFF (0), that's <strong>two</strong> possibilities.</p>
            <p>What if you have <strong>two</strong> switches (2 bits)? Let's list the combinations:</p>
            <ul>
              <li>Switch 1 OFF, Switch 2 OFF (<code>0 0</code>)</li>
              <li>Switch 1 OFF, Switch 2 ON (<code>0 1</code>)</li>
              <li>Switch 1 ON, Switch 2 OFF (<code>1 0</code>)</li>
              <li>Switch 1 ON, Switch 2 ON (<code>1 1</code>)</li>
            </ul>
            <p>That's <strong>four</strong> possible patterns! See how the <strong>Form</strong> changes with more bits?</p>
            
            <!-- Interactive Suggestion Placeholder -->
            <div class="visual-placeholder" style="border: 1px dashed var(--medium-gray); padding: 15px; text-align: center; margin: 15px 0; background: var(--light-gray); color: var(--dark-gray);">
              [Interactive Suggestion: Simple switch toggler showing binary output (00, 01, 10, 11)]
            </div>
            <!-- End Placeholder -->

            <p><strong>Challenge:</strong> With a partner, predict how many different patterns you could make with <strong>three</strong> switches (3 bits). Do you spot a mathematical pattern? (Hint: 2, 4, ...?)</p>
          </div>
        </section>

        <section class="activity-section try-it">
          <h3 class="activity-title">
            <span class="activity-icon">üõ†Ô∏è</span> Try It: Human Switches!
          </h3>
          <div class="activity-content">
            <p>Time to *be* the binary <strong>Data</strong>! Find a partner.</p>
            <ol>
              <li><strong>Decide your states:</strong> How will you show 'OFF' (0)? Thumbs down? Sitting? How about 'ON' (1)? Thumbs up? Standing?</li>
              <li><strong>Practice:</strong> Make sure you can both show 0 and 1 clearly.</li>
              <li><strong>Two Bits:</strong> One person is Switch 1, the other is Switch 2. Now, work together to show all four patterns you listed in 'Analyse It' (00, 01, 10, 11) using your chosen actions.</li>
            </ol>
            <!-- Visual Suggestion Placeholder -->
            <div class="visual-placeholder" style="border: 1px dashed var(--medium-gray); padding: 15px; text-align: center; margin: 15px 0; background: var(--light-gray); color: var(--dark-gray);">
              [Visual Suggestion: Fun GIF/looping video of people acting as binary switches (standing/sitting)]
            </div>
            <!-- End Placeholder -->
            <p>You just represented binary patterns using your bodies! That's changing the <strong>Form</strong> of the <strong>Data</strong>.</p>
          </div>
        </section>

        <section class="activity-section watch-it">
          <h3 class="activity-title">
            <span class="activity-icon">üé¨</span> Watch It: Seeing Binary in Action
          </h3>
          <div class="activity-content">
            <p>Sometimes seeing is believing! Ask your teacher to show a short video that explains *why* computers rely on those simple ON/OFF states for everything they do.</p>
            <div class="video-placeholder" style="border: 2px dashed var(--gold-dark); padding: 20px; text-align: center; margin-top: 15px; background: rgba(13, 36, 66, 0.7); color: var(--off-white);">
              <p>
                <strong>Teacher Note:</strong> Insert relevant video embed code here. Good search terms: "Why do computers use binary kids", "Binary explained simple animation", "How transistors work basic explanation". Look for videos under 3-4 minutes.
              </p>
            </div>
          </div>
        </section>

        <section class="activity-section research-it">
          <h3 class="activity-title">
            <span class="activity-icon">üîç</span> Research It: Binary Around You?
          </h3>
          <div class="activity-content">
            <p>Your mission, should you choose to accept it: Become a Binary Detective!</p>
            <p>Think about things in your home or school that have only <strong>two</strong> distinct states, like ON/OFF. They might not use 0s and 1s, but they have that binary *idea*.</p>
            <p>Examples: A door is either OPEN or CLOSED. A tap is either ON or OFF.</p>
            <p><strong>Task:</strong> Find and list <strong>three</strong> things like this. Describe their two states.</p>
            <p>This is about spotting binary <strong>Logic</strong> (two options) in the real world, not just inside a computer!</p>
          </div>
        </section>

        <section class="activity-section code-it">
          <h3 class="activity-title">
            <span class="activity-icon">‚å®Ô∏è</span> Code It: The Basic Logic
          </h3>
          <div class="activity-content">
            <p>Computers constantly check the state of their switches. They use simple <strong>Logic</strong> rules, like this instruction written in pseudocode (a way of planning code):</p>
            <div class="code-monitor">
              <pre><code>CHECK the state of the switch

IF the switch state is ON THEN
  OUTPUT 1
ELSE (meaning the state is OFF)
  OUTPUT 0
END IF</code></pre>
            </div>
            <p>Every single '1' or '0' the computer uses comes from a simple check like this! This <strong>Logic</strong> is the foundation for representing all computer <strong>Data</strong>.</p>
          </div>
        </section>

        <section class="activity-section read-it">
          <h3 class="activity-title">
            <span class="activity-icon">üìö</span> Read It: Why Bother With Binary?
          </h3>
          <div class="activity-content">
            <p>Let's revisit the mission briefing from the start:</p>
            <blockquote>
              "Have you ever wondered how computers understand everything we tell them to do? ...Deep down, computers use a very simple system based on just two digits: 0 and 1. This system is called binary, and it's the fundamental language of all digital devices. In this chapter, we'll explore why computers rely on binary and how they use it to represent all sorts of data ‚Äì numbers, text, pictures, and even sound. Understanding binary helps us understand the logic behind how computers work..."
            </blockquote>
            <p><strong>Quick Check:</strong> What single word does this text use to describe the <strong>Form</strong> binary takes in computers - its 'fundamental...' what?</p>
             <!-- Answer: language -->
          </div>
        </section>

        <section class="activity-section plan-it">
          <h3 class="activity-title">
            <span class="activity-icon">üìù</span> Plan It / Design It: Human Switch Plan
          </h3>
          <div class="activity-content">
             <p>Good adventurers plan their moves! Let's map out the 'Human Switches' activity:</p>
             <ol>
               <li><strong>Goal:</strong> Physically show binary 0, 1, and the 4 patterns for 2 bits.</li>
               <li><strong>Resources:</strong> Us! (Pairs work best).</li>
               <li><strong>Define States:</strong> Action for OFF (0) = ______ Action for ON (1) = ______</li>
               <li><strong>Sequence (The Logical Steps):</strong>
                 <ul>
                   <li>Practice 0.</li>
                   <li>Practice 1.</li>
                   <li>Pair up (Assign Switch 1 / Switch 2).</li>
                   <li>Show 00 (Both ______).</li>
                   <li>Show 01 (S1 ______, S2 ______).</li>
                   <li>Show 10 (S1 ______, S2 ______).</li>
                   <li>Show 11 (Both ______).</li>
                 </ul>
               </li>
               <li><strong>Test:</strong> Did we successfully show all four unique combinations (the different <strong>Forms</strong> of 2-bit <strong>Data</strong>)? Yes / No</li>
             </ol>
          </div>
        </section>

        <section class="activity-section debug-it">
          <h3 class="activity-title">
            <span class="activity-icon">üêõ</span> Debug It: Simple State Check
          </h3>
          <div class="activity-content">
             <p>Time to debug ‚Äì find the error in <strong>Logic</strong> or <strong>Data</strong>!</p>
             <p><strong>Scenario:</strong> A computer needs to store whether a game character has found a key. State 'Found Key' = ON (1), State 'No Key' = OFF (0).</p>
             <p><strong>Problem:</strong> The computer stores the value '0'. Does the character have the key? (Yes / No)</p>
             <p><strong>Problem:</strong> If the character *has* found the key, what single <strong>bit</strong> should the computer store? (0 or 1)</p>
             <p>Debugging often means checking if the <strong>Data</strong> (0 or 1) correctly matches the state it's supposed to represent!</p>
          </div>
        </section>

        <section class="activity-section test-it">
          <h3 class="activity-title">
            <span class="activity-icon">‚úîÔ∏è</span> Test It: Binary Spotting!
          </h3>
          <div class="activity-content">
             <p>Test your binary identification skills! Which of these use *only* the digits allowed in binary <strong>Data</strong>?</p>
             <ul>
               <li><code>101010</code> - Binary? (Yes / No)</li>
               <li><code>ON</code> - Binary Digit? (Yes / No)</li>
               <li><code>000</code> - Binary? (Yes / No)</li>
               <li><code>121</code> - Binary? (Yes / No)</li>
               <li><code>1</code> - Binary? (Yes / No)</li>
               <li><code>Binary</code> - Binary Digit? (Yes / No)</li>
               <li><code>0.1</code> - Binary? (Yes / No)</li>
             </ul>
             <p>Remember the rule: Pure binary <strong>Form</strong> uses only 0 and 1!</p>
          </div>
        </section>

        <section class="activity-section build-it">
          <h3 class="activity-title">
            <span class="activity-icon">üß±</span> Build It / Create It: Draw Your Switches
          </h3>
          <div class="activity-content">
             <p>Let's design a simple 3-bit system!</p>
             <ol>
               <li>Draw <strong>three</strong> squares in a row on paper.</li>
               <li>Colour them! Maybe <strong>Red</strong> for OFF (0) and <strong>Green</strong> for ON (1)? Choose your colours!</li>
               <li>Show the pattern: Switch 1 = ON, Switch 2 = ON, Switch 3 = OFF using your colours.</li>
               <li>Below it, write the binary <strong>Data</strong> this pattern represents (e.g., <code>110</code>).</li>
               <li>Now draw and write the pattern for <code>010</code>.</li>
             </ol>
             <!-- Visual Suggestion Placeholder -->
             <div class="visual-placeholder" style="border: 1px dashed var(--medium-gray); padding: 15px; text-align: center; margin: 15px 0; background: var(--light-gray); color: var(--dark-gray);">
               [Visual Suggestion: Small image showing three squares coloured Red/Green with corresponding binary number below (e.g., Green, Green, Red -> 110)]
             </div>
             <!-- End Placeholder -->
             <p>You've created a visual <strong>Form</strong> for 3 bits of binary <strong>Data</strong>!</p>
          </div>
        </section>

        <section class="activity-section explain-it">
          <h3 class="activity-title">
            <span class="activity-icon">üó£Ô∏è</span> Explain It: Binary Basics
          </h3>
          <div class="activity-content">
             <p>Your quest: Explain the core idea to a friend who missed the start!</p>
             <p>They ask: 'Why don't computers just use numbers like 0 to 9? Why only 0 and 1?'</p>
             <p>In 2-3 clear sentences, explain the *main* reason. Connect it to how computers are built (those simple ON/OFF things!). Use the word 'binary'.</p>
             <textarea rows="3" style="width: 95%; padding: 5px; font-family: inherit; font-size: 1rem;" placeholder="Explain here... Start with something like 'Computers use binary because...'"></textarea>
          </div>
        </section>

        <section class="activity-section reflect-it">
          <h3 class="activity-title">
            <span class="activity-icon">üîÑ</span> Reflect It: How's It Going?
          </h3>
          <div class="activity-content">
            <p>Quick pit stop! Check your understanding compass:</p>
            <ul>
              <li>In your own words, what's the big difference between Denary (our numbers) and Binary (computer numbers)?</li>
              <li>What is a 'bit', really? (Think switches!)</li>
              <li>Name one advantage for computers using only two states (ON/OFF).</li>
              <li>On a scale of 1 (Lost in the woods) to 5 (Ready for the next quest!), how ready do you feel to learn how computers *count* using binary?</li>
            </ul>
          </div>
        </section>

        <section class="activity-section extend-it">
          <h3 class="activity-title">
            <span class="activity-icon">üöÄ</span> Extend It / Challenge It: Beyond ON/OFF
          </h3>
          <div class="activity-content">
            <p>You've mastered *why* computers use 0s and 1s (simple ON/OFF <strong>Logic</strong>).</p>
            <p><strong>The Big Question:</strong> If a computer only has 0 and 1, how can it possibly represent bigger numbers like 5, or 100, or your score in a game? How can it show all the colours in a picture or play music?</p>
            <p><strong>Clue:</strong> It's not about using *different* digits. It's about using *combinations* of 0s and 1s in clever patterns, where the position of a bit changes its value.</p>
            <p>Prepare for the next lesson, where we crack the code of binary counting and unlock how this simple <strong>Form</strong> represents complex <strong>Data</strong>!</p>
          </div>
        </section>
      </div> <!-- End Activity Grid -->

      <div class="triforce-divider"></div>

      <section class="activity-section master-challenge">
        <h3 class="activity-title">
            <span class="activity-icon">‚öîÔ∏è</span> Master the Challenge: Binary Brain Busters!
        </h3>
        <div class="activity-content">
            <p>Prove your understanding of the computer's secret code!</p>

            <div class="challenge-level bronze">
                <h4>
                    <span class="shield-icon">üõ°Ô∏è</span> Bronze: Wooden Shield
                </h4>
                <p>
                    <strong>Task:</strong> Complete the sentence: "A single binary digit (a 0 or 1) is called a ______."
                </p>
            </div>

            <div class="challenge-level silver">
                <h4>
                    <span class="shield-icon">üõ°Ô∏è</span> Silver: Iron Shield
                </h4>
                <p>
                    <strong>Task:</strong> List the <strong>two</strong> digits used in the Binary number system. Why is this system good for electronic computers? (Think ON/OFF).
                </p>
            </div>

            <div class="challenge-level gold">
                <h4>
                    <span class="shield-icon">üõ°Ô∏è</span> Gold: Hylian Shield
                </h4>
                <p>
                    <strong>Task:</strong> You have <strong>two</strong> switches (bits). List all <strong>four</strong> possible ON/OFF patterns using 0s and 1s. (This checks understanding from 'Analyse It').
                </p>
            </div>

            <div class="challenge-level platinum">
                <h4>
                    <span class="shield-icon">üëë</span> Platinum: Mirror Shield
                </h4>
                <p>
                    <strong>Task:</strong> Explain the difference between <strong>Base-10 (Denary)</strong> and <strong>Base-2 (Binary)</strong>. Give one example of something non-computer related that has only two states (like the 'Research It' task).
                </p>
            </div>
        </div>
      </section>

    </article>

    <nav class="lesson-nav card">
        <a href="topic6_title.html" class="button prev-lesson">
            <span>¬´</span> Topic Overview
        </a>
        <a href="topic6_lesson2.html" class="button next-lesson">
            Next Lesson <span>¬ª</span>
        </a>
    </nav>
    </main>

    <!-- FOOTER: This will be dynamically loaded via includes/footer.html -->
    <footer class="main-footer">
        <p>&copy; 2025 Mr Stewart, Head of Science - St. George's School D√ºsseldorf</p>
    </footer>

    <!-- 
    SCRIPTS: Will be dynamically loaded
    The template system will automatically include:
    - /scripts/main.js
    - Any additional scripts defined in includes/footer.html
    -->
    <script src="../../../scripts/main.js"></script>
    
    <script src="../../../scripts/ks3_animations.js"></script>
    
    
    
    
</body>
</html>