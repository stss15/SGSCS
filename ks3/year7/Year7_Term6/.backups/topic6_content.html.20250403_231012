<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Year 7: Data Representation - Interactive Textbook</title>
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Cinzel:wght@400;700&family=Press+Start+2P&family=Open+Sans&display=swap" rel="stylesheet">
    
    <!-- Base Styles -->
    <link rel="stylesheet" href="../../../styles/main.css">
    
    <!-- Theme Style - Will be replaced based on section -->
    <link rel="stylesheet" href="../../../styles/ks3_theme.css">
    
    <!-- Page Specific Styles -->
    
</head>
<body>
    <header class="main-header nav-sticky">
        <nav class="main-nav">
            <div class="logo">
                <a href="../../../index.html">Home</a>
            </div>
            <ul>
                <li><a href="../../../ks3/index.html" class="active">KS3</a></li>
                <li><a href="../../../ks4/index.html" <!--class="active"-->>KS4</a></li>
                <li><a href="../../../ks5/index.html" <!--class="active"-->>KS5</a></li>
            </ul>
            <button class="menu-toggle" aria-label="Toggle navigation" aria-expanded="false">
                <span class="hamburger-icon"></span>
            </button>
        </nav>
    </header>

    <main>
        <div class="article-container">
            <div class="page-title">
                <h1>Year 7: Data Representation</h1>
                <div class="title-meta">
                    <span class="meta-tag">Year 7</span>
                    <span class="meta-tag">Interactive Textbook</span>
                    <span class="meta-tag">Term 6</span>
                </div>
            </div>

            <div class="intro-text">
                <p>Have you ever wondered how computers, phones, and tablets understand what we want them to do? It's actually pretty amazing—they talk using a secret language called binary. This interactive textbook will help you explore the world of binary and data representation. Click on each lesson to reveal its content.</p>
            </div>

            <!-- Lesson 1 Collapsible Section -->
            <div class="lesson-toggle" onclick="toggleLesson('lesson1')">Lesson 1: Why Binary? Introduction to Number Systems</div>
            <div id="lesson1" class="lesson-content">
                <div class="lesson-inner">
                    <section class="content-section">
                        <h2>Introduction to Binary</h2>
                        <p>Have you ever wondered how computers, phones, and tablets understand what we want them to do? It's actually pretty amazing—they talk using a secret language called binary. Binary might sound complicated at first, but it's simply made up of two numbers: 0 and 1. Imagine these numbers like tiny switches that can turn things ON or OFF. When these switches work together, they help computers make logical decisions and process data quickly and accurately.</p>
                        
                        <div class="interactive-switch">
                            <div class="switch-state">OFF</div>
                            <div class="switch" id="demoSwitch1" onclick="toggleSwitch('demoSwitch1')"></div>
                            <div class="switch-state">ON</div>
                            <div class="switch-value" id="demoSwitch1Value">0</div>
                        </div>
                        
                        <div class="info-box">
                            <h3>Key Concept</h3>
                            <p>Binary is the fundamental language of computers, using only two digits: 0 and 1.</p>
                        </div>
                    </section>

                    <section class="content-section">
                        <h2>Why Binary?</h2>
                        <p>Computers need a clear and simple way to understand instructions and store information. They are packed full of tiny electronic switches that can either be in an ON (1) or OFF (0) state. Using just two states makes it straightforward for computers to follow logical instructions and process data efficiently.</p>
                        
                        <p>Binary is perfect for computers because it's simple, clear, and reliable, allowing them to perform incredibly complex tasks by breaking them down into simple processes.</p>
            </section>

                    <section class="content-section">
                        <h2>The Magic Behind Binary</h2>
                        <p>To understand how binary works, think of it like a special code. Each digit in binary, called a 'bit', has a specific value. Bits are grouped together, usually in groups of eight, called bytes. Each bit within the byte has a different value:</p>
                        
                        <div class="binary-place-values">
                            <div class="place-value">128</div>
                            <div class="place-value">64</div>
                            <div class="place-value">32</div>
                            <div class="place-value">16</div>
                            <div class="place-value">8</div>
                            <div class="place-value">4</div>
                            <div class="place-value">2</div>
                            <div class="place-value">1</div>
                        </div>
                        
                        <p>These values double each time, starting from the right. This doubling is key to how binary helps computers logically organize and process data.</p>
                        
                        <div class="info-box">
                            <h3>Important Terms</h3>
                            <ul>
                                <li><strong>Bit:</strong> A single binary digit (0 or 1)</li>
                                <li><strong>Byte:</strong> A group of 8 bits</li>
                                <li><strong>Place Value:</strong> The value of each position in a binary number</li>
                    </ul>
                        </div>
                    </section>

                    <section class="content-section">
                        <h2>Turning Binary into Numbers We Understand</h2>
                        <p>Let's decode the binary number 10110101 step-by-step:</p>
                        
                        <div class="binary-conversion">
                            <div class="binary-place-values">
                                <div class="place-value">128</div>
                                <div class="place-value">64</div>
                                <div class="place-value">32</div>
                                <div class="place-value">16</div>
                                <div class="place-value">8</div>
                                <div class="place-value">4</div>
                                <div class="place-value">2</div>
                                <div class="place-value">1</div>
                            </div>
                            <div class="binary-digits">
                                <div class="binary-digit">1</div>
                                <div class="binary-digit">0</div>
                                <div class="binary-digit">1</div>
                                <div class="binary-digit">1</div>
                                <div class="binary-digit">0</div>
                                <div class="binary-digit">1</div>
                                <div class="binary-digit">0</div>
                                <div class="binary-digit">1</div>
                            </div>
                            
                            <p>We add up the values wherever there's a 1:</p>
                            <div class="calculation">128 + 32 + 16 + 4 + 1 = 181</div>
                        </div>
                        
                        <p>So, the binary 10110101 logically represents the number 181.</p>
                    </section>

                    <section class="content-section">
                        <h2>Why Use Binary Instead of Regular Numbers?</h2>
                        <p>Regular numbers (denary numbers), like 10, 20, or 100, use ten digits (0–9). But computers find it difficult to handle ten different values at once. Using binary simplifies this, making it quicker and easier to process data, helping computers run smoothly and efficiently.</p>
                        
                        <div class="comparison-box">
                            <div class="comparison-item">
                                <h3>Denary (Base-10)</h3>
                                <p>Uses 10 digits: 0, 1, 2, 3, 4, 5, 6, 7, 8, 9</p>
                                <p>Example: 45</p>
                            </div>
                            <div class="comparison-item">
                                <h3>Binary (Base-2)</h3>
                                <p>Uses 2 digits: 0, 1</p>
                                <p>Example: 00101101</p>
                            </div>
                        </div>
                    </section>

                    <section class="content-section">
                        <h2>Turning Regular Numbers into Binary</h2>
                        <p>Converting regular (denary) numbers into binary helps you understand how computers logically organize data. Let's take the number 45 and see how this works:</p>
                        
                        <div class="conversion-steps">
                            <ol>
                                <li>First, find the largest binary value that fits into 45 without going over: that's 32.</li>
                                <li>Subtract 32 from 45, leaving 13.</li>
                                <li>The next biggest binary number that fits into 13 is 8. Subtract it, leaving 5.</li>
                                <li>Now subtract 4, leaving 1.</li>
                                <li>Finally subtract 1, leaving 0.</li>
                            </ol>
                        </div>
                        
                        <p>Placing these values into our chart:</p>
                        
                        <div class="binary-conversion">
                            <div class="binary-place-values">
                                <div class="place-value">128</div>
                                <div class="place-value">64</div>
                                <div class="place-value">32</div>
                                <div class="place-value">16</div>
                                <div class="place-value">8</div>
                                <div class="place-value">4</div>
                                <div class="place-value">2</div>
                                <div class="place-value">1</div>
                            </div>
                            <div class="binary-digits">
                                <div class="binary-digit">0</div>
                                <div class="binary-digit">0</div>
                                <div class="binary-digit">1</div>
                                <div class="binary-digit">0</div>
                                <div class="binary-digit">1</div>
                                <div class="binary-digit">1</div>
                                <div class="binary-digit">0</div>
                                <div class="binary-digit">1</div>
                            </div>
                        </div>
                        
                        <p>The binary number for 45 is 00101101.</p>
                    </section>

                    <section class="content-section">
                        <h2>Another Cool Trick: Division by 2</h2>
                        <p>You can also convert denary numbers into binary by repeatedly dividing by two and keeping track of remainders. Let's logically process this method using the number 22:</p>
                        
                        <div class="division-method">
                            <table class="division-table">
                                <tr>
                                    <th>Division</th>
                                    <th>Result</th>
                                    <th>Remainder</th>
                                </tr>
                                <tr>
                                    <td>22 ÷ 2</td>
                                    <td>11</td>
                                    <td>0</td>
                                </tr>
                                <tr>
                                    <td>11 ÷ 2</td>
                                    <td>5</td>
                                    <td>1</td>
                                </tr>
                                <tr>
                                    <td>5 ÷ 2</td>
                                    <td>2</td>
                                    <td>1</td>
                                </tr>
                                <tr>
                                    <td>2 ÷ 2</td>
                                    <td>1</td>
                                    <td>0</td>
                                </tr>
                                <tr>
                                    <td>1 ÷ 2</td>
                                    <td>0</td>
                                    <td>1</td>
                                </tr>
                            </table>
                        </div>
                        
                        <p>Reading backwards, you get 10110. To fill up a byte, add zeros to the front: 00010110.</p>
                    </section>

                    <!-- Add the interactive binary converter here -->
                    <section class="content-section">
                        <h2>Try It Yourself: Interactive Binary Converter</h2>
                        <p>Let's practice converting numbers between denary and binary. Enter a number between 0 and 255, and we'll show the conversion:</p>
                        
                        <div class="interactive-converter">
                            <div class="converter-input">
                                <label for="denaryInput">Enter a number (0-255):</label>
                                <input type="number" id="denaryInput" min="0" max="255" value="42">
                                <button onclick="convertToBinary()">Convert</button>
                            </div>
                            
                            <div id="binaryResult" class="binary-result">
                                <div class="binary-place-values">
                                    <div class="place-value">128</div>
                                    <div class="place-value">64</div>
                                    <div class="place-value">32</div>
                                    <div class="place-value">16</div>
                                    <div class="place-value">8</div>
                                    <div class="place-value">4</div>
                                    <div class="place-value">2</div>
                                    <div class="place-value">1</div>
                                </div>
                                <div class="binary-digits" id="resultDigits">
                                    <div class="binary-digit">0</div>
                                    <div class="binary-digit">0</div>
                                    <div class="binary-digit">1</div>
                                    <div class="binary-digit">0</div>
                                    <div class="binary-digit">1</div>
                                    <div class="binary-digit">0</div>
                                    <div class="binary-digit">1</div>
                                    <div class="binary-digit">0</div>
                                </div>
                </div>

                            <div id="conversionSteps" class="conversion-explanation">
                                <p>42 = 32 + 8 + 2</p>
                                <p>42 in binary is 00101010</p>
                            </div>
                        </div>
                    </section>

                    <section class="content-section">
                        <h2>Binary in the Real World</h2>
                        <p>Believe it or not, binary is everywhere! All digital photos, videos, music, and games you enjoy are stored as binary data. Even the emojis you send to friends! Understanding binary helps you appreciate how computers process and manage data in your daily life.</p>
                        
                        <div class="real-world-examples">
                            <div class="example-item">
                                <div class="example-icon">📱</div>
                                <h3>Smartphones</h3>
                                <p>All apps and data are stored as binary</p>
                            </div>
                            <div class="example-item">
                                <div class="example-icon">🎮</div>
                                <h3>Video Games</h3>
                                <p>Game graphics and logic use binary</p>
                            </div>
                            <div class="example-item">
                                <div class="example-icon">📸</div>
                                <h3>Digital Photos</h3>
                                <p>Images are stored as binary data</p>
                            </div>
                            <div class="example-item">
                                <div class="example-icon">🎵</div>
                                <h3>Music</h3>
                                <p>Sound is converted to binary</p>
                            </div>
                        </div>
                    </section>

                    <section class="content-section">
                        <h2>Binary and Computational Thinking</h2>
                        <p>Learning binary isn't just about numbers—it's about developing computational thinking. Computational thinking is a logical way of solving problems by breaking them down into simpler parts. Binary helps you logically see how complex tasks can be split into simple on/off decisions, making tricky problems manageable and solvable.</p>
                        
                        <div class="info-box">
                            <h3>Computational Thinking Skills</h3>
                            <ul>
                                <li><strong>Decomposition:</strong> Breaking down complex problems</li>
                                <li><strong>Pattern Recognition:</strong> Identifying similarities in problems</li>
                                <li><strong>Abstraction:</strong> Focusing on important details</li>
                                <li><strong>Algorithm Design:</strong> Creating step-by-step solutions</li>
                    </ul>
                        </div>
                    </section>

                    <section class="content-section">
                        <h2>Binary, Logic, and Data</h2>
                        <p>Understanding binary strengthens your digital literacy by teaching you how data is logically represented and processed. Computers follow clear logical rules using binary to handle data, making sure every click, tap, or swipe you make turns into exactly the action you expect.</p>
                        
                        <div class="logic-diagram">
                            <div class="logic-box">
                                <h3>Binary Logic</h3>
                                <p>Simple ON/OFF decisions</p>
                            </div>
                            <div class="logic-arrow">→</div>
                            <div class="logic-box">
                                <h3>Complex Operations</h3>
                                <p>Text, images, sound, video</p>
                            </div>
                </div>
                    </section>

                    <section class="content-section">
                        <h2>Ready to Talk Like a Computer?</h2>
                        <p>By learning binary, you're gaining skills that programmers, engineers, and scientists use every day. It's like having a superpower—understanding the secret language behind all digital technology. Next time you download an app, play a game, or even send a message, remember that all those cool things are happening because of binary logic. Get excited—you're starting to speak computer!</p>
                        
                        <div class="summary-box">
                            <h3>Key Takeaways</h3>
                            <ul>
                                <li>Binary uses only 0 and 1 (ON/OFF states)</li>
                                <li>Computers use binary because it's simple and reliable</li>
                                <li>Binary can represent any type of data</li>
                                <li>Understanding binary helps develop computational thinking</li>
                    </ul>
                        </div>
                    </section>

                    <div class="content-footer">
                        <a href="topic6_content.html" class="button">Back to Topic Overview</a>
                        <a href="topic6_lesson1.html" class="button">Go to Lesson 1 Activities</a>
                    </div>
                </div>
            </div>

            <!-- Lesson 2 Collapsible Section -->
            <div class="lesson-toggle" onclick="toggleLesson('lesson2')">Lesson 2: Introduction to Hexadecimal</div>
            <div id="lesson2" class="lesson-content">
                <div class="lesson-inner">
                    <section class="content-section">
                        <h2>Introduction to Hexadecimal</h2>
                        <p>Hexadecimal (or "hex") is a base-16 number system that uses 16 different digits: 0-9 and A-F. Hexadecimal is widely used in computing as a more human-friendly way to represent binary data.</p>
                        
                        <div class="info-box">
                            <h3>Key Concept</h3>
                            <p>Hexadecimal is a shorthand way to represent binary numbers, making them easier for humans to read and work with.</p>
                        </div>
                    </section>
                    
                    <section class="content-section">
                        <h2>Why Do We Need Hexadecimal?</h2>
                        <p>Binary numbers can get very long and are difficult for humans to read. For example, the binary number 11111111 requires eight digits. In hexadecimal, this same value is simply FF - much shorter and easier to remember!</p>
                        
                        <div class="comparison-box">
                            <div class="comparison-item">
                                <h3>Binary</h3>
                                <p>11111111</p>
                                <p>Eight digits to remember</p>
                            </div>
                            <div class="comparison-item">
                                <h3>Hexadecimal</h3>
                                <p>FF</p>
                                <p>Just two characters!</p>
                            </div>
                        </div>
                        
                        <p>Hexadecimal serves as a bridge between the binary language of computers and the decimal system that humans are familiar with.</p>
                    </section>
                    
                    <section class="content-section">
                        <h2>Hexadecimal Digits</h2>
                        <p>Since hexadecimal is base-16, it needs 16 different symbols. We use:</p>
                        <ul>
                            <li>The digits 0-9 for values zero to nine</li>
                            <li>The letters A-F for values ten to fifteen</li>
                    </ul>
                        
                        <table class="number-base-table">
                            <tr>
                                <th>Hex Digit</th>
                                <th>Decimal Value</th>
                                <th>Binary Value</th>
                            </tr>
                            <tr><td>0</td><td>0</td><td>0000</td></tr>
                            <tr><td>1</td><td>1</td><td>0001</td></tr>
                            <tr><td>2</td><td>2</td><td>0010</td></tr>
                            <tr><td>3</td><td>3</td><td>0011</td></tr>
                            <tr><td>4</td><td>4</td><td>0100</td></tr>
                            <tr><td>5</td><td>5</td><td>0101</td></tr>
                            <tr><td>6</td><td>6</td><td>0110</td></tr>
                            <tr><td>7</td><td>7</td><td>0111</td></tr>
                            <tr><td>8</td><td>8</td><td>1000</td></tr>
                            <tr><td>9</td><td>9</td><td>1001</td></tr>
                            <tr><td>A</td><td>10</td><td>1010</td></tr>
                            <tr><td>B</td><td>11</td><td>1011</td></tr>
                            <tr><td>C</td><td>12</td><td>1100</td></tr>
                            <tr><td>D</td><td>13</td><td>1101</td></tr>
                            <tr><td>E</td><td>14</td><td>1110</td></tr>
                            <tr><td>F</td><td>15</td><td>1111</td></tr>
                        </table>
                    </section>
                    
                    <section class="content-section">
                        <h2>The Connection to Binary</h2>
                        <p>The key insight is that each hexadecimal digit represents exactly 4 bits (binary digits).</p>
                        
                        <div class="info-box">
                            <h3>Important Pattern</h3>
                            <p>4 binary digits = 1 hexadecimal digit</p>
                            <p>8 binary digits = 2 hexadecimal digits</p>
                        </div>
                        
                        <p>This makes conversion between binary and hexadecimal very straightforward:</p>
                        <ol>
                            <li>To convert from binary to hex, group binary digits into sets of 4 (from the right)</li>
                            <li>To convert from hex to binary, replace each hex digit with its 4-digit binary equivalent</li>
                        </ol>
                    </section>
                    
                    <section class="content-section">
                        <h2>Converting Between Number Systems</h2>
                        <p>Let's practice converting between decimal, binary, and hexadecimal:</p>
                        
                        <table class="number-base-table">
                            <tr>
                                <th>Decimal</th>
                                <th>Binary</th>
                                <th>Hexadecimal</th>
                            </tr>
                            <tr><td>42</td><td>00101010</td><td>2A</td></tr>
                            <tr><td>255</td><td>11111111</td><td>FF</td></tr>
                            <tr><td>128</td><td>10000000</td><td>80</td></tr>
                            <tr><td>15</td><td>00001111</td><td>0F</td></tr>
                            <tr><td>170</td><td>10101010</td><td>AA</td></tr>
                        </table>
                    </section>
                    
                    <section class="content-section">
                        <h2>Interactive Hex Color Picker</h2>
                        <p>One of the most common uses of hexadecimal is for representing colors in web design. RGB (Red, Green, Blue) color values are typically written as hexadecimal numbers.</p>
                        
                        <div class="color-picker">
                            <h3>RGB Color Mixer</h3>
                            <div id="colorDisplay" class="color-display"></div>
                            
                            <div class="color-inputs">
                                <div class="color-input-group">
                                    <label for="redInput">Red</label>
                                    <input type="range" id="redInput" min="0" max="255" value="0" oninput="updateColor()">
                                    <div id="redValue" class="color-value">00</div>
                                </div>
                                
                                <div class="color-input-group">
                                    <label for="greenInput">Green</label>
                                    <input type="range" id="greenInput" min="0" max="255" value="100" oninput="updateColor()">
                                    <div id="greenValue" class="color-value">64</div>
                                </div>
                                
                                <div class="color-input-group">
                                    <label for="blueInput">Blue</label>
                                    <input type="range" id="blueInput" min="0" max="255" value="190" oninput="updateColor()">
                                    <div id="blueValue" class="color-value">BE</div>
                                </div>
                </div>

                            <div class="hex-display">
                                <label>Hex Color Code:</label>
                                <div id="hexValue" class="color-value">#0064BE</div>
                </div>

                            <div class="color-explanation">
                                <p>The hex color code is made up of three parts:</p>
                                <ul>
                                    <li><strong>First two digits:</strong> Amount of red (00-FF)</li>
                                    <li><strong>Middle two digits:</strong> Amount of green (00-FF)</li>
                                    <li><strong>Last two digits:</strong> Amount of blue (00-FF)</li>
                    </ul>
                                <p>For example, #FF0000 is bright red, #00FF00 is bright green, and #0000FF is bright blue.</p>
                            </div>
                        </div>
                    </section>
                    
                    <section class="content-section">
                        <h2>Real-World Applications of Hexadecimal</h2>
                        <p>Hexadecimal is used in many areas of computing:</p>
                        
                        <div class="real-world-examples">
                            <div class="example-item">
                                <div class="example-icon">🎨</div>
                                <h3>Web Colors</h3>
                                <p>HTML color codes use hex values</p>
                            </div>
                            <div class="example-item">
                                <div class="example-icon">🔍</div>
                                <h3>Memory Addresses</h3>
                                <p>Programmers use hex to refer to memory locations</p>
                            </div>
                            <div class="example-item">
                                <div class="example-icon">📊</div>
                                <h3>Data Analysis</h3>
                                <p>Viewing binary data in a more readable format</p>
                            </div>
                            <div class="example-item">
                                <div class="example-icon">🌐</div>
                                <h3>MAC Addresses</h3>
                                <p>Network device identifiers use hex notation</p>
                            </div>
                </div>
                 </section>

                    <section class="content-section">
                        <h2>Summary: Hexadecimal in Computing</h2>
                        <p>Hexadecimal provides a compact and human-readable way to represent binary data:</p>
                        
                        <div class="summary-box">
                            <h3>Key Points</h3>
                            <ul>
                                <li>Hexadecimal uses 16 digits (0-9, A-F) to represent values 0-15</li>
                                <li>Each hex digit represents exactly 4 binary digits</li>
                                <li>Conversion between binary and hex is straightforward</li>
                                <li>Hex is widely used in computing for web colors, memory addresses, and more</li>
                            </ul>
                        </div>
                    </section>
                </div>
            </div>

            <!-- Lesson 3 Collapsible Section (placeholder) -->
            <div class="lesson-toggle" onclick="toggleLesson('lesson3')">Lesson 3: Binary Numbers - Binary to Denary Conversion & Addition</div>
            <div id="lesson3" class="lesson-content">
                <div class="lesson-inner">
                    <p class="coming-soon">Content coming soon...</p>
                </div>
            </div>

            <!-- Lesson 4 Collapsible Section -->
            <div class="lesson-toggle" onclick="toggleLesson('lesson4')">Lesson 4: Introduction to Hexadecimal & Text Representation</div>
            <div id="lesson4" class="lesson-content">
                <div class="lesson-inner">
                    <p class="coming-soon">Content coming soon...</p>
                </div>
            </div>

            <!-- Lesson 5 Collapsible Section (placeholder) -->
            <div class="lesson-toggle" onclick="toggleLesson('lesson5')">Lesson 5: Representing Images</div>
            <div id="lesson5" class="lesson-content">
                <div class="lesson-inner">
                    <p class="coming-soon">Content coming soon...</p>
                </div>
            </div>

            <!-- Lesson 6 Collapsible Section (placeholder) -->
            <div class="lesson-toggle" onclick="toggleLesson('lesson6')">Lesson 6: Representing Sound & Unit Review</div>
            <div id="lesson6" class="lesson-content">
                <div class="lesson-inner">
                    <p class="coming-soon">Content coming soon...</p>
                </div>
            </div>

        </div>
    </main>

    <footer class="main-footer">
        <p>&copy; 2025 Mr Stewart, Head of Science - St. George's School Düsseldorf</p>
    </footer>

    <!-- Base Scripts -->
    <script src="../../../scripts/main.js"></script>
    
    <!-- Theme Scripts - Will be replaced based on section -->
    <script src="../../../scripts/ks3_animations.js"></script>
    
    <!-- Page Specific Scripts -->
    
</body>
</html> 